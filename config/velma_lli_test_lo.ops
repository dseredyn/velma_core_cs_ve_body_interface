import("rtt_ros");
import("rtt_roscomm");
import("rtt_rosparam");
require("os")

ros.import("rtt_rospack")
ros.import("rtt_actionlib");
ros.import("rtt_barrett_hand_controller_msgs");
ros.import("rtt_velma_low_level_interface_msgs");
ros.import("velma_low_level_interface");

ros.import("eigen_typekit");
ros.import("rtt_std_msgs");
ros.import("port_operations");

var ConnPolicy cpTx;
cpTx.transport = 2;                 # the MQueue protocol id
cpTx.name_id   = "/lli_status";     # the connection id

loadComponent("lli_lo_tx","VelmaLLILoTx")
setActivity("lli_lo_tx", 2.0, 1, ORO_SCHED_RT);
lli_lo_tx.configure();
stream("lli_lo_tx.status_OUTPORT", cpTx);



var ConnPolicy cpRx;
cpRx.transport = 2;                 # the MQueue protocol id
cpRx.name_id   = "/lli_command";    # the connection id

loadComponent("lli_lo_rx","VelmaLLILoRx")
setActivity("lli_lo_rx", 0, 1, ORO_SCHED_RT);
lli_lo_rx.configure();
stream("lli_lo_rx.command_INPORT", cpRx);


lli_lo_tx.start();
lli_lo_rx.start();

